#!/bin/bash

# Exit build script on first failure.
set -e

# Exit on unset variable.
set -u

env_vars_to_flags() {
  set +u

  local flags=""

  if [[ ! -z "${SITE_TITLE}" ]]; then
    flags+=" -title \"${SITE_TITLE}\""
  fi

  if [[ ! -z "${SITE_SUBTITLE}" ]]; then
    flags+=" -subtitle \"${SITE_SUBTITLE}\""
  fi

  if [[ ! -z "${SITE_FOOTER}" ]]; then
    flags+=" -footer \"${SITE_FOOTER}\""
  fi

  if [[ "${SITE_DARK_MODE}" == "true" ]]; then
    flags+=" -darkmode"
  fi

  if [[ "${SITE_SHOW_DOCUMENTATION}" == "false" ]]; then
    flags+=" -showdocs=false"
  fi

  if [[ ! -z "${PER_MINUTE_LIMIT}" ]]; then
    flags+=" -perminutelimit \"${PER_MINUTE_LIMIT}\""
  fi

  set -u

  echo "${flags}"
}

is_litestream_enabled() {
  set +ux

  local IS_ENABLED='false'

  if [[ ! -z "${LITESTREAM_ACCESS_KEY_ID}" ]] && \
      [[ ! -z "${LITESTREAM_SECRET_ACCESS_KEY}" ]] && \
      [[ ! -z "${LITESTREAM_REGION}" ]]; then
    IS_ENABLED='true';
  fi

  set -ux

  echo "${IS_ENABLED}"
}

readonly IS_LITESTREAM_ENABLED="$(is_litestream_enabled)"

# Echo commands to stdout.
set -x

if [[ "${IS_LITESTREAM_ENABLED}" == 'true' ]]; then

  export readonly DB_PATH="/app/data/store.db"

  # Restore database from S3.
  litestream restore -if-replica-exists -v "${DB_PATH}"

  # Let Litestream start LogPaste as a child process
  exec litestream replicate \
    -exec "/app/server $(env_vars_to_flags)"
    "${DB_PATH}" \
    "${DB_REPLICA_URL}"
else
  # Start server.
  eval "/app/server $(env_vars_to_flags)"
fi
