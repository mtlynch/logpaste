#!/bin/bash

# Exit build script on first failure.
set -e

# Exit on unset variable.
set -u

readonly DB_PATH="/app/data/store.db"

env_vars_to_flags() {
  set +u

  local flags=""

  if [[ ! -z "${SITE_TITLE}" ]]; then
    flags+=" -title \"${SITE_TITLE}\""
  fi

  if [[ ! -z "${SITE_SUBTITLE}" ]]; then
    flags+=" -subtitle \"${SITE_SUBTITLE}\""
  fi

  if [[ "${SITE_SHOW_DOCUMENTATION}" == "false" ]]; then
    flags+=" -showdocs=false"
  fi

  set -u

  echo "${flags}"
}

# Set litestream configuration
cat > /etc/litestream.yml <<EOF
access-key-id:     "${AWS_ACCESS_KEY_ID}"
secret-access-key: "${AWS_SECRET_ACCESS_KEY}"
region: "${AWS_REGION}"

dbs:
  - path: "${DB_PATH}"
    replicas:
      - url: "${DB_REPLICA_URL}"
        sync-interval: "${DB_SYNC_INTERVAL}"
EOF

# Echo commands to stdout.
set -x

# Restore database from S3.
if [[ "${CREATE_NEW_DB}" != 'true' ]]; then
  litestream restore -v "${DB_PATH}"
fi

# Begin replication to S3 in the background.
# Note: It would be nicer to use the systemd service, but systemd
# is trickier within Docker.
litestream replicate "${DB_PATH}" "${DB_REPLICA_URL}" &

# Start server.
eval "/app/server $(env_vars_to_flags)"
