version: 2.1
jobs:
  test:
    docker:
      - image: cimg/go:1.18.4
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Test go packages
          command: dev-scripts/run-go-tests
      - run:
          name: Verify golang formatting
          command: dev-scripts/check-go-formatting
  build_backend:
    docker:
      - image: cimg/go:1.18.4
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Compile backend
          command: dev-scripts/build-backend
  check_frontend_formatting:
    docker:
      - image: cimg/node:13.2.0
    steps:
      - checkout
      - run:
          name: Install prettier globally
          command: npm install prettier@2.0.5
      - run:
          name:
          command: ./node_modules/.bin/prettier --check .
  e2e:
    machine:
      # Choose an explicit machine image so that we get the latest version of
      # docker-compose.
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run:
          name: Perform e2e tests.
          command: dev-scripts/run-e2e-tests
          no_output_timeout: 1m
      - store_artifacts:
          path: e2e/cypress/videos
      - store_artifacts:
          path: e2e/cypress/screenshots
  deploy:
    machine:
      image: ubuntu-2004:202010-01
    environment:
      APP_NAME: logpaste-com
      # The flyctl changes too much to use a specific version, so use the latest for the
      # time being.
      # https://github.com/superfly/flyctl/issues/394#issuecomment-815890166
      FLYCTL_VERSION: "latest"
    steps:
      - checkout
      - run:
          name: Install flyctl
          command: curl -L https://fly.io/install.sh | sh -s "${FLYCTL_VERSION}"
      - run:
          name: Create fly.io config file
          command: |
            set -x
            curl -s -L https://raw.githubusercontent.com/mtlynch/logpaste/master/dev-scripts/make-fly-config | \
              bash /dev/stdin "${APP_NAME}"
      - run:
          name: Deploy logpaste to fly.io
          command: |
            "${HOME}/.fly/bin/flyctl" deploy \
              --local-only \
              --env "SITE_FOOTER=<h2>Notice</h2><p>This is a demo instance. Uploads are wiped every few hours.</p>"

  build_docker_images:
    docker:
      - image: cimg/base:stable
    environment:
      BUILD_TARGETS: "linux/amd64"
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
      - run:
          name: Log in to Docker Hub
          command: |
            echo "${DOCKERHUB_ACCESS_TOKEN}" | \
              docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
      - run:
          name: Enable multiarch builds with QEMU
          command: |
            docker run \
              --rm \
              --privileged \
              multiarch/qemu-user-static \
              --reset \
              -p yes
      - run:
          name: Create multiarch build context
          command: docker context create builder
      - run:
          name: Create multiplatform builder
          command: |
            docker buildx create builder \
              --name builder \
              --driver docker-container \
              --use
      - run:
          name: Ensure builder has booted
          command: docker buildx inspect --bootstrap
      - run:
          name: Build docker images
          command: |
            docker buildx build \
              --push \
              --platform "$BUILD_TARGETS" \
              --tag "mtlynch/logpaste:${CIRCLE_TAG}" \
              --tag mtlynch/logpaste:latest \
              .
workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - build_backend:
          filters:
            tags:
              only: /.*/
      - e2e:
          filters:
            tags:
              only: /.*/
      - check_frontend_formatting:
          filters:
            tags:
              only: /.*/
      - build_docker_images:
          requires:
            - test
            - build_backend
            - e2e
            - check_frontend_formatting
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+){2}/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - test
            - build_backend
            - e2e
            - check_frontend_formatting
          filters:
            branches:
              only: master
